package us.myles.nms;

import us.myles.classtrap.TrapTag;

//net.minecraft.server.v1_7_R3.World
@TrapTag
public interface World {
	public void B();
	public float B(int arg0, int arg1, int arg2);
	public int S();
	public java.util.Calendar V();
	public void notify(int arg0, int arg1, int arg2);
	public boolean isEmpty(int arg0, int arg1, int arg2);
	public Block getType(int arg0, int arg1, int arg2);
	public void p(int arg0, int arg1, int arg2);
	public boolean r(int arg0, int arg1, int arg2);
	public float c(float arg0);
	public boolean c(EnumSkyBlock arg0, int arg1, int arg2, int arg3);
	public void c(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5);
	public boolean c(int arg0, int arg1, int arg2, boolean arg3);
	public boolean c(AxisAlignedBB arg0);
	public int h(int arg0, int arg1);
	public float h(float arg0);
	public void m(int arg0, int arg1, int arg2);
	public boolean s(int arg0, int arg1, int arg2);
	public void x(int arg0, int arg1, int arg2);
	public java.util.Random A(int arg0, int arg1, int arg2);
	public void update(int arg0, int arg1, int arg2, Block arg3);
	public boolean isLoaded(int arg0, int arg1, int arg2);
	public long getTime();
	public void b(int arg0, int arg1, int arg2, TileEntity arg3);
	public void b(EnumSkyBlock arg0, int arg1, int arg2, int arg3, int arg4);
	public void b(int arg0, int arg1, int arg2, Block arg3, int arg4, int arg5);
	public int b(EnumSkyBlock arg0, int arg1, int arg2, int arg3);
	public int b(int arg0, int arg1, int arg2, boolean arg3);
	public boolean b(AxisAlignedBB arg0, Material arg1);
	public void b(java.util.List arg0);
	public boolean b(AxisAlignedBB arg0);
	public void b(int arg0, int arg1, int arg2, Block arg3, int arg4);
	public void b(int arg0, int arg1, int arg2, int arg3, int arg4);
	public void b(int arg0, int arg1, int arg2, int arg3);
	public int b(java.lang.String arg0);
	public Block b(int arg0, int arg1);
	public float b(double arg0, double arg1, double arg2);
	public ChunkPosition b(java.lang.String arg0, int arg1, int arg2, int arg3);
	public boolean b(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5);
	public us.myles.cb.CraftServer getServer();
	public float j(float arg0);
	public int j(int arg0, int arg1, int arg2);
	public void e(int arg0, int arg1, int arg2, Block arg3);
	public boolean e(AxisAlignedBB arg0);
	public boolean e(int arg0, int arg1, int arg2, boolean arg3);
	public boolean t(int arg0, int arg1, int arg2);
	public int getData(int arg0, int arg1, int arg2);
	public void a(java.util.Collection arg0);
	public void a(int arg0, int arg1, int arg2, Block arg3, int arg4, int arg5);
	public Entity a(java.lang.Class arg0, AxisAlignedBB arg1, Entity arg2);
	public java.util.List a(java.lang.Class arg0, AxisAlignedBB arg1, IEntitySelector arg2);
	public boolean a(AxisAlignedBB arg0, Entity arg1);
	public boolean a(boolean arg0);
	public float a(Vec3D arg0, AxisAlignedBB arg1);
	public void a(TileEntity arg0);
	public java.util.List a(java.lang.Class arg0, AxisAlignedBB arg1);
	public boolean a(AxisAlignedBB arg0, Material arg1, Entity arg2);
	public boolean a(AxisAlignedBB arg0, Material arg1);
	public java.util.List a(Chunk arg0, boolean arg1);
	public void a(double arg0, double arg1, double arg2, java.lang.String arg3, float arg4, float arg5, boolean arg6);
	public void a(EntityHuman arg0, java.lang.String arg1, float arg2, float arg3);
	public boolean a(EntityHuman arg0, int arg1, int arg2, int arg3);
	public MovingObjectPosition a(Vec3D arg0, Vec3D arg1);
	public void a(java.lang.String arg0, int arg1, int arg2, int arg3);
	public EntityHuman a(java.util.UUID arg0);
	public EntityHuman a(java.lang.String arg0);
	public CrashReportSystemDetails a(CrashReport arg0);
	public void a(EntityHuman arg0, int arg1, int arg2, int arg3, int arg4, int arg5);
	public PersistentBase a(java.lang.Class arg0, java.lang.String arg1);
	public void a(java.lang.String arg0, PersistentBase arg1);
	public boolean a(int arg0, int arg1, int arg2, Block arg3);
	public int a(java.lang.Class arg0);
	public java.util.List a(AxisAlignedBB arg0);
	public void a(int arg0, int arg1, int arg2, Block arg3, int arg4);
	public int a(float arg0);
	public void a(java.util.List arg0);
	public PathEntity a(Entity arg0, int arg1, int arg2, int arg3, float arg4, boolean arg5, boolean arg6, boolean arg7, boolean arg8);
	public java.util.List getCubes(Entity arg0, AxisAlignedBB arg1);
	public float y();
	public ChunkCoordinates getSpawn();
	public float d(float arg0);
	public void d(int arg0, int arg1, int arg2, int arg3, int arg4);
	public boolean d(int arg0, int arg1, int arg2, boolean arg3);
	public int g(int arg0, int arg1);
	public boolean z(int arg0, int arg1, int arg2);
	public WorldData getWorldData();
	public boolean i(int arg0, int arg1, int arg2);
	public int i(int arg0, int arg1);
	public Entity getEntity(int arg0);
	public void X();
	public void kill(Entity arg0);
	public us.myles.cb.CraftWorld getWorld();
	public GameRules getGameRules();
	public float n(int arg0, int arg1, int arg2);
	public void f(int arg0, int arg1, int arg2, Block arg3);
	public BiomeBase getBiome(int arg0, int arg1);
	public Chunk getChunkAt(int arg0, int arg1);
	public IChunkProvider L();
	public void addParticle(java.lang.String arg0, double arg1, double arg2, double arg3, double arg4, double arg5, double arg6);
	public void G();
	public boolean w();
	public void makeSound(Entity arg0, java.lang.String arg1, float arg2, float arg3);
	public void makeSound(double arg0, double arg1, double arg2, java.lang.String arg3, float arg4, float arg5);
	public Scoreboard getScoreboard();
	public java.util.List getEntities(Entity arg0, AxisAlignedBB arg1);
	public java.util.List getEntities(Entity arg0, AxisAlignedBB arg1, IEntitySelector arg2);
	public long getDayTime();
	public void everyoneSleeping();
	public boolean addEntity(Entity arg0);
	public boolean addEntity(Entity arg0, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason arg1);
	public boolean q(int arg0, int arg1, int arg2);
	public IDataManager getDataManager();
	public Chunk getChunkAtWorldCoords(int arg0, int arg1);
	public void broadcastEntityEffect(Entity arg0, byte arg1);
	public boolean containsLiquid(AxisAlignedBB arg0);
	public boolean setAir(int arg0, int arg1, int arg2, boolean arg3);
	public boolean setAir(int arg0, int arg1, int arg2);
	public boolean setData(int arg0, int arg1, int arg2, int arg3, int arg4);
	public boolean douseFire(EntityHuman arg0, int arg1, int arg2, int arg3, int arg4);
	public TileEntity getTileEntity(int arg0, int arg1, int arg2);
	public void doTick();
	public void setTileEntity(int arg0, int arg1, int arg2, TileEntity arg3);
	public void setSpawnFlags(boolean arg0, boolean arg1);
	public int getHeight();
	public int getBlockPower(int arg0, int arg1, int arg2, int arg3);
	public int getBlockPower(int arg0, int arg1, int arg2);
	public long getSeed();
	public boolean mayPlace(Block arg0, int arg1, int arg2, int arg3, boolean arg4, int arg5, Entity arg6, ItemStack arg7);
	public PathEntity findPath(Entity arg0, Entity arg1, float arg2, boolean arg3, boolean arg4, boolean arg5, boolean arg6);
	public void setDayTime(long arg0);
	public void playNote(int arg0, int arg1, int arg2, Block arg3, int arg4, int arg5);
	public Explosion explode(Entity arg0, double arg1, double arg2, double arg3, float arg4, boolean arg5);
	public void triggerEffect(int arg0, int arg1, int arg2, int arg3, int arg4);
	public boolean P();
	public boolean Q();
	public boolean isRainingAt(int arg0, int arg1, int arg2);
	public MovingObjectPosition rayTrace(Vec3D arg0, Vec3D arg1, boolean arg2);
	public MovingObjectPosition rayTrace(Vec3D arg0, Vec3D arg1, boolean arg2, boolean arg3, boolean arg4);
	public void removeEntity(Entity arg0);
	public void tickEntities();
	public int getLightLevel(int arg0, int arg1, int arg2);
	public void applyPhysics(int arg0, int arg1, int arg2, Block arg3);
	public boolean setTypeUpdate(int arg0, int arg1, int arg2, Block arg3);
	public boolean strikeLightning(Entity arg0);
	public EntityHuman findNearbyPlayer(double arg0, double arg1, double arg2, double arg3);
	public EntityHuman findNearbyPlayer(Entity arg0, double arg1);
	public int getBlockFacePower(int arg0, int arg1, int arg2, int arg3);
	public int getHighestNeighborSignal(int arg0, int arg1, int arg2);
	public EntityHuman findNearbyVulnerablePlayer(double arg0, double arg1, double arg2, double arg3);
	public EntityHuman findNearbyVulnerablePlayer(Entity arg0, double arg1);
	public void checkSleepStatus();
	public boolean isBlockIndirectlyPowered(int arg0, int arg1, int arg2);
	public boolean setTypeAndData(int arg0, int arg1, int arg2, Block arg3, int arg4, int arg5);
	public int getHighestBlockYAt(int arg0, int arg1);
	public void addIWorldAccess(IWorldAccess arg0);
	public void entityJoinedWorld(Entity arg0, boolean arg1);
	public boolean isBlockFacePowered(int arg0, int arg1, int arg2, int arg3);
	public void notifyAndUpdatePhysics(int arg0, int arg1, int arg2, Chunk arg3, Block arg4, Block arg5, int arg6);
	public Explosion createExplosion(Entity arg0, double arg1, double arg2, double arg3, float arg4, boolean arg5, boolean arg6);
	public void playerJoinedWorld(Entity arg0);
	public boolean areChunksLoaded(int arg0, int arg1, int arg2, int arg3);
	public WorldChunkManager getWorldChunkManager();
}
