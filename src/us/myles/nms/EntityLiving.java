package us.myles.nms;

import us.myles.classtrap.TrapTag;

//net.minecraft.server.v1_7_R3.EntityLiving
@TrapTag
public interface EntityLiving {
	public void B();
	public boolean isAlive();
	public void p(int arg0);
	public boolean p(Entity arg0);
	public boolean c(EntityLiving arg0);
	public void h();
	public void m(Entity arg0);
	public void m(float arg0);
	public AttributeMapBase bb();
	public void b(EntityLiving arg0);
	public void b(NBTTagCompound arg0);
	public Vec3D j(float arg0);
	public void e(float arg0, float arg1);
	public void e();
	public void a(Entity arg0, float arg1, double arg2, double arg3);
	public void a(ItemStack arg0);
	public boolean a(ScoreboardTeamBase arg0);
	public void a(NBTTagCompound arg0);
	public float getMaxHealth();
	public void l(Entity arg0);
	public boolean d(MobEffect arg0);
	public void i(float arg0);
	public boolean isSleeping();
	public CombatTracker aV();
	public EntityLiving aW();
	public boolean damageEntity(DamageSource arg0, float arg1);
	public void receive(Entity arg0, int arg1);
	public float getHeadHeight();
	public void die(DamageSource arg0);
	public float getHealth();
	public boolean n(Entity arg0);
	public float br();
	public void f(boolean arg0);
	public Vec3D af();
	public void aZ();
	public void bt();
	public void heal(float arg0, org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason arg1);
	public void heal(float arg0);
	public boolean aQ();
	public void bu();
	public boolean bq();
	public void aa();
	public int aM();
	public ItemStack bd();
	public void setHealth(float arg0);
	public int aJ();
	public void removeAllEffects();
	public AttributeInstance getAttributeInstance(IAttribute arg0);
	public void enderTeleportTo(double arg0, double arg1, double arg2);
	public ScoreboardTeamBase getScoreboardTeam();
	public MobEffect getEffect(MobEffectList arg0);
	public boolean h_();
	public void setSprinting(boolean arg0);
	public boolean hasEffect(int arg0);
	public boolean hasEffect(MobEffectList arg0);
	public int aU();
	public int aY();
	public EntityLiving aK();
	public ItemStack getEquipment(int arg0);
	public ItemStack[] getEquipment();
	public float bk();
	public void setEquipment(int arg0, ItemStack arg1);
	public int aL();
	public boolean aD();
	public EntityLiving getLastDamager();
	public EnumMonsterType getMonsterType();
	public float getHeadRotation();
	public java.util.Collection getEffects();
	public java.util.Random aH();
	public int getExpReward();
	public boolean isBaby();
	public void removeEffect(int arg0);
	public void addEffect(MobEffect arg0);
	public boolean R();
	public boolean Q();
}
